#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

#define BUZZER_PIN D5         // Pino do buzzer
#define LED_PIN D8            // Pino do LED
#define PULSE_SENSOR_PIN A0   // Pino do sensor de pulso
#define PULSE_THRESHOLD 100   // Limiar para detectar a presença do dedo

const char* ssid = "Nala 2G";
const char* password = "87654321";
const char* mqtt_server = "broker.mqtt-dashboard.com";

WiFiClient espClient;
PubSubClient client(espClient);
long lastMsg = 0;
char msg[50];
int value = 0;

Adafruit_SSD1306 display(128, 64, &Wire, -1);

boolean fingerOnSensor = false;

void setup() {
  pinMode(BUZZER_PIN, OUTPUT); // Configura o pino do buzzer como saída
  pinMode(LED_PIN, OUTPUT);    // Configura o pino do LED como saída

  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); // Inicializa a tela OLED

  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Conectando a ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi conectado");
  Serial.println("Endereço IP: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Tentando se reconectar ao MQTT...");
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    if (client.connect(clientId.c_str())) {
      Serial.println("Conectado");
      client.publish("Publicação_do_ESP8266", "hello world");
      client.subscribe("Subscrição_do_ESP8266");
    } else {
      Serial.print("Falha na conexão, rc=");
      Serial.print(client.state());
      Serial.println(" Tentando novamente em 5 segundos");
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  int sensorValue = analogRead(PULSE_SENSOR_PIN);
  if (sensorValue > PULSE_THRESHOLD && !fingerOnSensor) {
    fingerOnSensor = true;
  } else if (sensorValue <= PULSE_THRESHOLD && fingerOnSensor) {
    fingerOnSensor = false;
  }

  if (fingerOnSensor) {
    tone(BUZZER_PIN, 500);
    delay(1000);
    noTone(BUZZER_PIN);
    digitalWrite(LED_PIN, HIGH);
    delay(500);
    digitalWrite(LED_PIN, LOW);
    delay(500);

    int bpm = map(sensorValue, 0, 1023, 50, 90);
    bpm = constrain(bpm, 50, 90);

    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.print("Heart Rate: ");
    display.print(bpm);
    display.print(" bpm");
    display.display();

    unsigned long now = millis();
    if (now - lastMsg > 2000) {
      lastMsg = now;
      ++value;
      snprintf (msg, 50, "Heart Rate: %d bpm", bpm);
      Serial.print("Publicar mensagem: ");
      Serial.println(msg);
      client.publish("Subscrição_do_ESP8266", msg);
    }
  } else {
    display.clearDisplay();
    display.display();
  }
}
